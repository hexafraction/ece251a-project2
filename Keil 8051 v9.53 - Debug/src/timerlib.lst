C51 COMPILER V9.53.0.0   TIMERLIB                                                          04/17/2017 19:13:36 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE TIMERLIB
OBJECT MODULE PLACED IN .\src/timerlib.OBJ
COMPILER INVOKED BY: Z:\Applications\Simplicity Studio.app\Contents\Eclipse\developer\toolchains\keil_8051\9.53\BIN\C51.
                    -exe /Users/rafi/Documents/Code/ECE-251-A/ece251a-project2/src/timerlib.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNIN
                    -GLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/Applications/Simplicity S
                    -tudio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//Device/shared/si8051base;/Applications/Simplicity Studio.app/Cont
                    -ents/Eclipse/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc;/Applications/Simplicity Studio.app/Contents/Eclipse/develop
                    -er/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc;/Applications/Simplicity Studio.app/Contents/Eclipse/develo
                    -per/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/graphics;/Applications/Simplicity Studio.app/Contents/Ecli
                    -pse/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/config;/Applications/Simplicity Studio.app/Conte
                    -nts/Eclipse/developer/sdks/8051/v4.0.3//kits/common/bsp;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/s
                    -dks/8051/v4.0.3//kits/EFM8BB3_SLSTK2022A/config;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051
                    -/v4.0.3//Device/EFM8BB3/peripheral_driver/inc) PRINT(.\src/timerlib.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src
                    -/timerlib.OBJ)

line level    source

   1          /*
   2           * timerlib.c
   3           *
   4           *  Created on: Apr 7, 2017
   5           *      Author: hexafraction
   6           */
   7          #include <SI_EFM8BB3_Register_Enums.h>
   8          #include <SI_EFM8BB3_Defs.h>
   9          #include "timer_countdown.h"
*** WARNING C318 IN LINE 9 OF /Users/rafi/Documents/Code/ECE-251-A/ece251a-project2/src/timerlib.c: can't open file 'tim
             -er_countdown.h'
  10          volatile bool timerEnabled = false;
  11          volatile long millisElapsed = 0;
  12          volatile int reset_low = 0;
  13          volatile int reset_high = 0;
  14          
  15          unsigned char TCON_SAVE;
  16          unsigned char TMOD_SAVE;
  17          
  18          // puts system into 24.5MHz/32 clock
  19          void setupSysClock(){
  20   1              //CLKSEL = 0x50; // 0b01010000, meaning reset divider ready flag, divide by 32, source is HFOSC0 (24.5MHz
             -)
  21   1              // actual system clock ends up being 765.625kHz
  22   1              reset_low = 255-254; // 766%256
  23   1              reset_high = 255-100; // 766/256, trunc
  24   1      }
  25          
  26          // overwrites state of timer 0
  27          #pragma disable // we probably don't want interrupts happening in the middle of all this
  28          void setupTimer(){
  29   1              setupSysClock();
  30   1              TCON_SAVE = TCON;
  31   1              TMOD_SAVE = TMOD;
  32   1              TCON = (TMOD & 0xCC); // keep timer 1 setting, zero all timer 0 bits (disabling and clearing its interrup
             -t flags)
  33   1              TMOD = (TMOD & 0xF0) | (0x01); // keep timer 1 mode setting, set timer 1 to disable gate, TIMER mode, and
             - mode 1.
  34   1              millisElapsed = 0;
  35   1              timerEnabled = false;
  36   1              IE_ET0 = 0; // don't enable interrupts just yet
  37   1      }
  38          
  39          // disable interrupts since we don't know whether writing to a 32-bit volatile integer is atomic
  40          #pragma disable
C51 COMPILER V9.53.0.0   TIMERLIB                                                          04/17/2017 19:13:36 PAGE 2   

  41          long getElapsedMillis(){
  42   1              return millisElapsed/8;
  43   1      }
  44          
  45          // disable the internal flag we use to track consistency, and restore the original TCON and TMOD registers
             -.
  46          void tearDownTimer(){
  47   1              timerEnabled = false;
  48   1              TCON = TCON_SAVE;
  49   1              TMOD = TMOD_SAVE;
  50   1      }
  51          
  52          
  53          void resetTimer(){
  54   1              bit ET0_SAVE = IE_ET0; // save interrupt control state...
  55   1              IE_ET0 = 0; // ... and stop the timer.
  56   1              TL0 = reset_low; // reset the timer's internal count
  57   1              TH0 = reset_high;
  58   1              IE_ET0 = ET0_SAVE; // and restart it if it was started.
  59   1              millisElapsed = 0; // and reset our count
  60   1      }
  61          
  62          // enable the run flag, and the interrupt.
  63          void startTimer(){
  64   1              timerEnabled = true;
  65   1              IE_ET0 = 1;
  66   1              TCON_TR0 = 1;
  67   1      }
  68          
  69          // disable the run flag and the interrupt.
  70          void stopTimer(){
  71   1              timerEnabled = false;
  72   1              IE_ET0 = 0;
  73   1              TCON_TR0 = 0;
  74   1      }
  75          
  76          // the ISR itself.
  77          SI_INTERRUPT (TIMERLIB_TICK, TIMER0_IRQn) {
  78   1              if(!timerEnabled) return;
  79   1              else {
  80   2                      millisElapsed = millisElapsed + 1;
  81   2                      TH0 = reset_high;
  82   2                      TL0 = reset_low;
  83   2              }
  84   1      }
  85          
  86          //convenience function to give a countdown and start timer
  87          void start(){
  88   1              performCountdown();
*** WARNING C206 IN LINE 88 OF /Users/rafi/Documents/Code/ECE-251-A/ece251a-project2/src/timerlib.c: 'performCountdown':
             - missing function-prototype
  89   1              startTimer();
  90   1      }
  91          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    189    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.53.0.0   TIMERLIB                                                          04/17/2017 19:13:36 PAGE 3   

   BIT SIZE         =      1       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
